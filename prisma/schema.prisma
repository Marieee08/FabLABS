generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Machine {
  id        String   @id @default(cuid())
  Machine   String
  Image     String
  Desc      String
  Link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AccInfo {
  id              Int              @id @default(autoincrement())
  clerkId         String           @unique
  Name            String
  email           String           @unique
  Role            String           @default("USER")
  BusinessInfo    BusinessInfo?    @relation("AccInfoToBusinessInfo")
  ClientInfo      ClientInfo?      @relation("AccInfoToClientInfo")
  EVCReservations EVCReservation[] @relation("AccInfoToEVCReservation")
  UtilReqs        UtilReq[]        @relation("AccInfoToUtilReq")
}

model ClientInfo {
  id         Int     @id @default(autoincrement())
  ContactNum String
  Address    String?
  City       String?
  Province   String?
  Zipcode    Int?
  accInfoId  Int     @unique
  accInfo    AccInfo @relation("AccInfoToClientInfo", fields: [accInfoId], references: [id])
}

model BusinessInfo {
  id                  Int     @id @default(autoincrement())
  CompanyName         String?
  BusinessOwner       String?
  BusinessPermitNum   String?
  TINNum              String?
  CompanyIDNum        String?
  CompanyEmail        String?
  ContactPerson       String?
  Designation         String?
  CompanyAddress      String?
  CompanyCity         String?
  CompanyProvince     String?
  CompanyZipcode      Int?
  CompanyPhoneNum     String?
  CompanyMobileNum    String?
  Manufactured        String?
  ProductionFrequency String?
  Bulk                String?
  accInfoId           Int     @unique
  accInfo             AccInfo @relation("AccInfoToBusinessInfo", fields: [accInfoId], references: [id])
}

model UtilReq {
  id                   Int                  @id @default(autoincrement())
  ProductsManufactured String?
  BulkofCommodity      String?
  RequestDate          DateTime?            @default(now())
  EndDate              DateTime?
  DateofProcessing     DateTime?
  Processedby          String?
  UtilReqApproval      Boolean?
  accInfoId            Int?
  CitizenSatisfaction  CitizenSatisfaction? @relation("UtilReqToCitizenSatisfaction")
  ClientSatisfaction   ClientSatisfaction?  @relation("UtilReqToClientSatisfaction")
  CustomerFeedback     CustomerFeedback?    @relation("UtilReqToCustomerFeedback")
  EmployeeEvaluation   EmployeeEvaluation?  @relation("UtilReqToEmployeeEvaluation")
  JobandPayment        JobandPayment?       @relation("UtilReqToJobandPayment")
  MachineUtilizations  MachineUtilization[] @relation("UtilReqToMachineUtilization")
  ProcessInfos         ProcessInfo[]        @relation("UtilReqToProcessInfo")
  accInfo              AccInfo?             @relation("AccInfoToUtilReq", fields: [accInfoId], references: [id])
  UtilTimes            UtilTime[]           @relation("UtilReqToUtilTime")
}

model ProcessInfo {
  id           Int      @id @default(autoincrement())
  Facility     String?
  FacilityQty  Int?
  FacilityHrs  Int?
  Equipment    String?
  EquipmentQty Int?
  EquipmentHrs Int?
  Tools        String?
  ToolsQty     Int?
  ToolsHrs     Int?
  utilReqId    Int?
  utilReq      UtilReq? @relation("UtilReqToProcessInfo", fields: [utilReqId], references: [id])
}

model UtilTime {
  id        Int       @id @default(autoincrement())
  DayNum    Int?
  StartTime DateTime?
  EndTime   DateTime?
  utilReqId Int?
  utilReq   UtilReq?  @relation("UtilReqToUtilTime", fields: [utilReqId], references: [id])
}

model EVCReservation {
  id              Int              @id @default(autoincrement())
  ControlNo       Int?
  LvlSec          String?
  NoofStudents    Int?
  Subject         String?
  Topic           String?
  Teacher         String?
  EVCLabDate      DateTime?
  EVCTimeofUse    DateTime?
  ReceivedBy      String?
  ReceivedDate    DateTime?
  InspectedBy     String?
  InspectedDate   DateTime?
  StudentSig      Bytes?
  DateRequested   DateTime?
  TeacherSig      Bytes?
  EVCApproval     Boolean?
  accInfoId       Int?
  accInfo         AccInfo?         @relation("AccInfoToEVCReservation", fields: [accInfoId], references: [id])
  EVCStudents     EVCStudent[]     @relation("EVCReservationtoEVCStudent")
  NeededMaterials NeededMaterial[] @relation("EVCReservationtoNeededMaterial")
}

model NeededMaterial {
  id          Int             @id @default(autoincrement())
  Item        String?
  ItemQty     Int?
  Description String?
  Issued      String?
  Returned    String?
  evcId       Int?
  evc         EVCReservation? @relation("EVCReservationtoNeededMaterial", fields: [evcId], references: [id])
}

model EVCStudent {
  id       Int             @id @default(autoincrement())
  Students String?
  evcId    Int?
  evc      EVCReservation? @relation("EVCReservationtoEVCStudent", fields: [evcId], references: [id])
}

model MachineUtilization {
  id              Int             @id @default(autoincrement())
  ReviwedBy       String?
  MachineApproval Boolean?
  DateReviewed    DateTime?
  utilReqId       Int?
  DownTimes       DownTime[]      @relation("MachineUtilizationtoDownTime")
  utilReq         UtilReq?        @relation("UtilReqToMachineUtilization", fields: [utilReqId], references: [id])
  OperatingTimes  OperatingTime[] @relation("MachineUtilizationtoOperatingTime")
  RepairChecks    RepairCheck[]   @relation("MachineUtilizationtoRepairCheck")
}

model OperatingTime {
  id               Int                 @id @default(autoincrement())
  OTDate           DateTime?
  OTTypeofProducts String?
  OTStartTime      DateTime?
  OTEndTime        DateTime?
  OTMachineOp      String?
  machineUtilId    Int?
  machineUtil      MachineUtilization? @relation("MachineUtilizationtoOperatingTime", fields: [machineUtilId], references: [id])
}

model DownTime {
  id               Int                 @id @default(autoincrement())
  DTDate           DateTime?
  DTTypeofProducts String?
  DTTime           Int?
  Cause            String?
  DTMachineOp      String?
  machineUtilId    Int?
  machineUtil      MachineUtilization? @relation("MachineUtilizationtoDownTime", fields: [machineUtilId], references: [id])
}

model RepairCheck {
  id            Int                 @id @default(autoincrement())
  RepairDate    DateTime?
  Service       String?
  Duration      Int?
  RepairReason  String?
  PartsReplaced String?
  RPPersonnel   String?
  machineUtilId Int?
  machineUtil   MachineUtilization? @relation("MachineUtilizationtoRepairCheck", fields: [machineUtilId], references: [id])
}

model CustomerFeedback {
  id           Int       @id @default(autoincrement())
  FeedbackDate DateTime?
  Q1           Int?
  Q2           Int?
  Q3           Int?
  Q4           Int?
  Q5           Int?
  Q6           Int?
  Q7           Int?
  utilReqId    Int       @unique
  utilReq      UtilReq   @relation("UtilReqToCustomerFeedback", fields: [utilReqId], references: [id])
}

model EmployeeEvaluation {
  id        Int       @id @default(autoincrement())
  EvalDate  DateTime?
  EvalSig   Boolean?
  E1        Int?
  E2        Int?
  E3        Int?
  E4        Int?
  E5        Int?
  E6        Int?
  E7        Int?
  E8        Int?
  E9        Int?
  E10       Int?
  E11       Int?
  utilReqId Int       @unique
  utilReq   UtilReq   @relation("UtilReqToEmployeeEvaluation", fields: [utilReqId], references: [id])
}

model ClientSatisfaction {
  id        Int     @id @default(autoincrement())
  C1        Int?
  C2        Int?
  C3        Int?
  C4        Int?
  C5        Int?
  C6        Int?
  C7        Int?
  C8        Int?
  utilReqId Int     @unique
  utilReq   UtilReq @relation("UtilReqToClientSatisfaction", fields: [utilReqId], references: [id])
}

model CitizenSatisfaction {
  id          Int     @id @default(autoincrement())
  Sex         String?
  Age         Int?
  CC1         Int?
  CC2         Int?
  CC3         Int?
  CC4         Int?
  CC5         Int?
  SQD0        Int?
  SQD1        Int?
  SQD2        Int?
  SQD3        Int?
  SQD4        Int?
  SQD5        Int?
  SQD6        Int?
  SQD7        Int?
  SQD8        Int?
  Suggestions String?
  utilReqId   Int     @unique
  utilReq     UtilReq @relation("UtilReqToCitizenSatisfaction", fields: [utilReqId], references: [id])
}

model JobandPayment {
  id             Int       @id @default(autoincrement())
  Date           DateTime?
  ClientProfile  String?
  ProjDesc       String?
  Services       String?
  Minutes        Decimal?
  Costpermin     Decimal?
  TotalCost      Decimal?
  TotalAmntDue   Decimal?
  CompletionDate DateTime? @default(now())
  utilReqId      Int?      @unique
  utilReq        UtilReq?  @relation("UtilReqToJobandPayment", fields: [utilReqId], references: [id])
}
